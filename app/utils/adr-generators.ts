import type { Platform, DependencyTool } from "~/types/project";
import { getDependencyToolDocumentationUrl } from "~/data/dependency-tools";
import {
  getDependencyTechnicalConsiderations,
  getDependencyPositiveConsequences,
  getDependencyNegativeConsequences,
  getDependencyImplementationEffort,
  getDependencyTrainingRequirements,
  getDependencyImplementationSteps,
  getDependencyAlternativesConsidered
} from "~/utils/dependency-utils";
import {
  getEcosystemBenefits,
  getTeamFamiliarityNotes,
  getTechnicalConsiderations,
  getPositiveConsequences,
  getNegativeConsequences,
  getCIGuidance,
  getAlternativesConsidered
} from "~/utils/platform-utils";

export const generateADR = (
  projectName: string,
  selectedPlatform: string,
  platforms: Platform[]
): string => {
  const repoName = projectName.trim() || "my-project"
  const platform = platforms.find(p => p.id === selectedPlatform)
  const currentDate = new Date().toISOString().split('T')[0]
  const adrNumber = "001" // Could be made dynamic based on existing ADRs
  
  return `# ADR-${adrNumber}: Code Hosting Platform Selection for ${repoName}

## Status
Accepted

## Date
${currentDate}

## Context
We need to select a code hosting platform for the ${repoName} project. This decision will impact our development workflow, collaboration processes, CI/CD capabilities, and integration options.

## Decision
We have decided to use **${platform?.name}** as our code hosting platform.

## Rationale
### Platform Overview
${platform?.description}

### Key Benefits
- **Best suited for**: ${platform?.bestFor}
- **Ecosystem integration**: ${getEcosystemBenefits(selectedPlatform)}
- **Team familiarity**: ${getTeamFamiliarityNotes(selectedPlatform)}

### Technical Considerations
${getTechnicalConsiderations(selectedPlatform)}

## Consequences
### Positive
- ${getPositiveConsequences(selectedPlatform).join('\n- ')}

### Negative
- ${getNegativeConsequences(selectedPlatform).join('\n- ')}

### Neutral
- Repository URL: \`${platform?.url !== '#' ? platform?.url + encodeURIComponent(repoName) : 'Self-hosted instance required'}\`
- Primary use case: Source code management and version control
- Expected team size: [To be filled]
- Project visibility: [Public/Private - To be decided]

## Implementation Notes
1. Set up repository with appropriate access controls
2. Configure branch protection rules
3. Set up CI/CD workflows ${getCIGuidance(selectedPlatform)}
4. Document contribution guidelines
5. Configure issue templates and pull request templates

## Alternatives Considered
${getAlternativesConsidered(selectedPlatform, platforms)}

## Review Date
${new Date(Date.now() + 90 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]} (90 days from decision)

---
*This ADR was generated by CreateStack.dev on ${currentDate}*`
};

export const generateDependencyADR = (
  projectName: string,
  selectedDepTool: string,
  dependencyTools: DependencyTool[]
): string => {
  const repoName = projectName.trim() || "my-project"
  const tool = dependencyTools.find(t => t.id === selectedDepTool)
  const currentDate = new Date().toISOString().split('T')[0]
  const adrNumber = "002" // Could be made dynamic based on existing ADRs
  
  return `# ADR-${adrNumber}: Dependency Management Tool Selection for ${repoName}

## Status
Accepted

## Date
${currentDate}

## Context
We need to select a dependency management tool for the ${repoName} project. This decision will impact our security posture, maintenance overhead, development workflow, and how we handle dependency updates and vulnerability management.

## Decision
We have decided to use **${tool?.name}** for dependency management.

## Rationale
### Tool Overview
${tool?.description}

### Key Benefits
- **Best suited for**: ${tool?.bestFor}
- **Platform compatibility**: ${tool?.platform}
- **Pricing model**: ${tool?.pricing}
- **Key features**: ${tool?.features.join(', ')}

### Technical Considerations
${getDependencyTechnicalConsiderations(selectedDepTool)}

## Consequences
### Positive
- ${getDependencyPositiveConsequences(selectedDepTool).join('\n- ')}

### Negative
- ${getDependencyNegativeConsequences(selectedDepTool).join('\n- ')}

### Neutral
- Documentation: ${getDependencyToolDocumentationUrl(selectedDepTool)}
- Implementation effort: ${getDependencyImplementationEffort(selectedDepTool)}
- Team training required: ${getDependencyTrainingRequirements(selectedDepTool)}

## Implementation Notes
1. ${getDependencyImplementationSteps(selectedDepTool).join('\n2. ')}

## Alternatives Considered
${getDependencyAlternativesConsidered(selectedDepTool, dependencyTools)}

## Review Date
${new Date(Date.now() + 90 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]} (90 days from decision)

---
*This ADR was generated by CreateStack.dev on ${currentDate}*`
};
